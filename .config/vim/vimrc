set nocompatible
filetype off

" Set the runtime path to include Vundle and initialize
set rtp+=$XDG_CACHE_HOME/vim/bundle/Vundle.vim
call vundle#begin('$XDG_CACHE_HOME/vim/bundle')
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'Raimondi/delimitMate.git'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'elzr/vim-json'
Plugin 'unimpaired.vim'
Plugin 'derekwyatt/vim-scala'
Plugin 'aquach/vim-http-client'
Plugin 'tmux-plugins/vim-tmux'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'pangloss/vim-javascript'
Plugin 'Valloric/MatchTagAlways'
Plugin 'itchyny/lightline.vim'
Plugin 'tpope/vim-commentary'
Plugin 'jparise/vim-graphql'
Plugin 'udalov/kotlin-vim'
Plugin 'mrk21/yaml-vim'
Plugin 'posva/vim-vue'
Plugin 'martinda/Jenkinsfile-vim-syntax'
Plugin 'scrooloose/nerdtree',
Plugin 'tfnico/vim-gradle',
Plugin 'HerringtonDarkholme/yats.vim'
Plugin 'Shougo/unite.vim'
Plugin 'Quramy/vison'
Plugin 'ryanoasis/vim-devicons'
Plugin 'bfontaine/Brewfile.vim'
" Plugin 'Xuyuanp/nerdtree-git-plugin'
" Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'
call vundle#end()

set ruler
" relative line numbers based on current line
set relativenumber
" autolatically refresh file if changed on disk
set autoread

filetype plugin on
filetype indent on

" Enable syntax highlighting
syntax on

" automatically close quotes, brackets, etc
let delimitMate_expand_cr = 0

" CtrlP
" directories to ignore
set wildignore+=*/target/**
" don't cache
let g:ctrlp_use_caching=0

" vim-http-client: use json filetype for better syntax highlighting
let g:http_client_json_ft="json"

" stop creating swp and ~ files
set nobackup
set noswapfile

" ignore case of `/` searches unless an upper case letter is used
set ignorecase
set smartcase

" remove ugly vertibal bars in split bar
set fillchars+=vert:\ 

" enable line numbers
set number

" highlight current line
set cursorline

" highlight searches
set hlsearch

" highlight dynamically as search pattern is typeds
set incsearch

" always show status line
set laststatus=2

" disable error bells
set noerrorbells

" don't reset cursor to start of line when moving around
set nostartofline

" set status bar theme
let g:lightline = { 'colorscheme': 'landscape' }

" dont' show mode - it's already available in status bar
set noshowmode

" Reload files that have not been modified
set autoread                        

" Automatically :write before running commands
set autowrite                      

" open NERDTree automatically abset path argument
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" NERDTree
" close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" use Ctrl-n to toggle NERDTree
map <C-n> :NERDTreeToggle<CR>

" configure yaml experience
autocmd! BufNewFile,BufReadPost *.{yaml,yml} set filetype=yaml foldmethod=indent
autocmd FileType yaml setlocal foldlevel=1

" reload vimrc automatically
augroup Vim
  autocmd!
  au bufwritepost vimrc source %
augroup END

" treat prisma data model files as graphql types
autocmd BufRead,BufNewFile *.prisma set filetype=graphql

" Set UTF-8 encoding 
set encoding=UTF-8
set guifont=SourceCodePro_Nerd_Font_Mono:h11
