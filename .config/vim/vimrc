" Set the runtime path for viutom data files
set runtimepath+=$XDG_DATA_HOME/vim

call plug#begin("$XDG_DATA_HOME/vim/bundle")
Plug 'editorconfig/editorconfig-vim'
Plug 'derekwyatt/vim-scala'
Plug 'tmux-plugins/vim-tmux' 
Plug 'godlygeek/tabular'
Plug 'pangloss/vim-javascript'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-commentary'
Plug 'jparise/vim-graphql'
Plug 'udalov/kotlin-vim'
Plug 'mrk21/yaml-vim'
Plug 'posva/vim-vue'
Plug 'martinda/Jenkinsfile-vim-syntax'
Plug 'vim-scripts/groovyindent-unix'
Plug 'tfnico/vim-gradle'
Plug 'bfontaine/Brewfile.vim'
Plug 'wannesm/wmgraphviz.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-projectionist'
Plug 'w0rp/ale'
Plug 'airblade/vim-gitgutter'
Plug 'digitaltoad/vim-pug'

call plug#end()

" re-assign leader key
let mapleader = ","

" set UTF-8 encoding 
set encoding=utf-8

set ruler
" relative line numbers based on current line
set relativenumber

filetype plugin on
filetype indent on

" Enable syntax highlighting (look good against dark background)
syntax on 
set background=dark


" automatically close quotes, brackets, etc
let delimitMate_expand_cr = 0

" fzf 
nnoremap <Leader>, : <C-u>FZF<CR>
let g:fzf_buffers_jump = 1

" stop creating swap and ~ files
set nobackup
set noswapfile

" ignore case of `/` searches unless an upper case letter is used
set ignorecase
set smartcase

" enable line numbers
set number

" highlight current line
set cursorline

" highlight searches
set hlsearch

" highlight dynamically as search pattern is typeds
set incsearch

" always show status line
set laststatus=2

" disable error bells
set noerrorbells

" don't reset cursor to start of line when moving around
set nostartofline

" dont' show mode - it's already available in status bar
set noshowmode

" autolatically refresh file if changed on disk
set autoread                        

" automatically :write before running commands
set autowrite                      

" configure yaml experience
autocmd! BufNewFile,BufReadPost *.{yaml,yml} set filetype=yaml foldmethod=indent
autocmd FileType yaml setlocal foldlevel=2

" reload vimrc automatically
augroup vimrc
  autocmd!
  au BufWritePost vimrc source %
augroup END

" TODO fix split border styling, extract styling
highlight VertSplit cterm=none ctermfg=White

" don't automatically wrap non comment text based on textwidth 
" typing introduced by editorconfig-vim plugin
set formatoptions-=t

" use more natural split behavior by switching to the newly open
" pane instead of remaining in original
set splitright
set splitbelow

" ALE settings
let g:ale_completion_max_suggestions = 10
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_sign_column_always = 1
let g:ale_completion_enabled = 1
let g:ale_fix_on_save = 1
let g:ale_open_list = 1
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 0
let g:ale_warn_about_trailing_whitespace = 0
let g:ale_linters = {
  \   'javascript': ['eslint', 'tsserver'],
  \    }
let g:ale_fixers = { 
  \ "javascript": [ "eslint" ], 
  \ "xml": ["xmllint"]
  \}

" show 5 lines of errors (default: 10)
let g:ale_list_window_size = 5

" set airline to reflect ALE errors/warnings 
let g:airline#extensions#ale#enabled = 1

" auto-completion behavior
set completeopt=menu,menuone,preview,longest,noinsert

" automatically update gitgutter signs upon file save
autocmd BufWritePost * GitGutter

" change invocation trigger key binding for rest console
let g:vrc_trigger = '<Leader>r'
